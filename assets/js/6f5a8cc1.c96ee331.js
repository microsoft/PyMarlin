(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4929],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||l;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,i=new Array(l);i[0]=p;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7332:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return a},toc:function(){return u},default:function(){return c}});var n=r(2122),o=r(9756),l=(r(7294),r(3905)),i={sidebar_label:"stdout",title:"utils.writer.stdout"},a={unversionedId:"reference/utils/writer/stdout",id:"reference/utils/writer/stdout",isDocsHomePage:!1,title:"utils.writer.stdout",description:"Stdout writer module.",source:"@site/docs/reference/utils/writer/stdout.md",sourceDirName:"reference/utils/writer",slug:"/reference/utils/writer/stdout",permalink:"/PyMarlin/docs/reference/utils/writer/stdout",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/reference/utils/writer/stdout.md",version:"current",sidebar_label:"stdout",frontMatter:{sidebar_label:"stdout",title:"utils.writer.stdout"},sidebar:"referenceSideBar",previous:{title:"utils.writer.base",permalink:"/PyMarlin/docs/reference/utils/writer/base"},next:{title:"utils.writer.tensorboard",permalink:"/PyMarlin/docs/reference/utils/writer/tensorboard"}},u=[{value:"Stdout Objects",id:"stdout-objects",children:[]}],s={toc:u};function c(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Stdout writer module."),(0,l.kt)("h2",{id:"stdout-objects"},"Stdout Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Stdout(Writer)\n")),(0,l.kt)("p",null,"This class implements the stdout writer for stats."),(0,l.kt)("h4",{id:"log_scalar"},"log","_","scalar"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def log_scalar(k, v, step)\n")),(0,l.kt)("p",null,"Log metric to stdout."),(0,l.kt)("h4",{id:"log_multi"},"log","_","multi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def log_multi(k, v, step)\n")),(0,l.kt)("p",null,"Log metric to stdout."),(0,l.kt)("h4",{id:"log_model"},"log","_","model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def log_model(flat_weights, flat_grads, step)\n")),(0,l.kt)("p",null,"Log model to stdout.\nCan slow down training. Only use for debugging.\nIt","'","s logged in Tensorboard by default."),(0,l.kt)("h4",{id:"log_graph"},"log","_","graph"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def log_graph(model, device=None)\n")),(0,l.kt)("p",null,"Log model graph to stdout."))}c.isMDXComponent=!0}}]);