(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4186],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(t),m=i,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||o;return t?n.createElement(d,a(a({ref:r},u),{},{components:t})):n.createElement(d,a({ref:r},u))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8673:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return u}});var n=t(2122),i=t(9756),o=(t(7294),t(3905)),a={sidebar_label:"fabrics",title:"utils.fabrics"},c={unversionedId:"reference/utils/fabrics",id:"reference/utils/fabrics",isDocsHomePage:!1,title:"utils.fabrics",description:"Compute fabric specific utility methods.",source:"@site/docs/reference/utils/fabrics.md",sourceDirName:"reference/utils",slug:"/reference/utils/fabrics",permalink:"/PyMarlin/docs/reference/utils/fabrics",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/reference/utils/fabrics.md",version:"current",sidebar_label:"fabrics",frontMatter:{sidebar_label:"fabrics",title:"utils.fabrics"},sidebar:"referenceSideBar",previous:{title:"utils.distributed",permalink:"/PyMarlin/docs/reference/utils/distributed"}},l=[],s={toc:l};function u(e){var r=e.components,t=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Compute fabric specific utility methods."),(0,o.kt)("h4",{id:"is_azureml_mpirun"},"is","_","azureml","_","mpirun"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def is_azureml_mpirun() -> bool\n")),(0,o.kt)("p",null,"Check if run set up by azureml using OpenMPI image."),(0,o.kt)("p",null,"When running MPIRUN with OpenMPI images, AzureML sets a specific combination\nof environment variables which we check for here, specifically::"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"OMPI_COMM_WORLD_RANK  # the rank of the process\nOMPI_COMM_WORLD_SIZE  # the world size\nOMPI_COMM_WORLD_LOCAL_RANK  # the local rank of the process on the node\nOMPI_COMM_WORLD_LOCAL_SIZE  # number of processes on the node\n")),(0,o.kt)("p",null,"and one of the following::"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"AZ_BATCH_MASTER_NODE  # multiple nodes\nAZ_BATCHAI_MPI_MASTER_NODE  # single node\n")),(0,o.kt)("h4",{id:"is_torch_distributed_launch_via_environment_variables"},"is","_","torch","_","distributed","_","launch","_","via","_","environment","_","variables"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def is_torch_distributed_launch_via_environment_variables() -> bool\n")),(0,o.kt)("p",null,"Check if torch.distributed.launch used to submit the job using environment variables."),(0,o.kt)("h4",{id:"is_azureml_run_with_sdk"},"is","_","azureml","_","run","_","with","_","sdk"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def is_azureml_run_with_sdk() -> bool\n")),(0,o.kt)("p",null,"Check if we are running on Azure ML with azureml-sdk."))}u.isMDXComponent=!0}}]);