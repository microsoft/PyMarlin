(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6200],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return f},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),o=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},f=function(e){var t=o(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),u=o(a),m=r,d=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return a?n.createElement(d,s(s({ref:t},f),{},{components:a})):n.createElement(d,s({ref:t},f))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var o=2;o<i;o++)s[o]=a[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1657:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return f}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),s={sidebar_label:"data_classes",title:"plugins.hf_seq_classification.data_classes"},l={unversionedId:"reference/plugins/hf_seq_classification/data_classes",id:"reference/plugins/hf_seq_classification/data_classes",isDocsHomePage:!1,title:"plugins.hf_seq_classification.data_classes",description:"HfSeqClassificationDataset Objects",source:"@site/docs/reference/plugins/hf_seq_classification/data_classes.md",sourceDirName:"reference/plugins/hf_seq_classification",slug:"/reference/plugins/hf_seq_classification/data_classes",permalink:"/PyMarlin/docs/reference/plugins/hf_seq_classification/data_classes",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/reference/plugins/hf_seq_classification/data_classes.md",version:"current",sidebar_label:"data_classes",frontMatter:{sidebar_label:"data_classes",title:"plugins.hf_seq_classification.data_classes"},sidebar:"referenceSideBar",previous:{title:"plugins.hf_seq2seq.implementation",permalink:"/PyMarlin/docs/reference/plugins/hf_seq2seq/implementation"},next:{title:"plugins.hf_seq_classification.implementation",permalink:"/PyMarlin/docs/reference/plugins/hf_seq_classification/implementation"}},c=[{value:"HfSeqClassificationDataset Objects",id:"hfseqclassificationdataset-objects",children:[]},{value:"HfSeqClassificationDataInterface Objects",id:"hfseqclassificationdatainterface-objects",children:[]}],o={toc:c};function f(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"hfseqclassificationdataset-objects"},"HfSeqClassificationDataset Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class HfSeqClassificationDataset(Dataset)\n")),(0,i.kt)("p",null,"PyTorch Dataset."),(0,i.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(args, input_filepath, label_map)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"args")," - DataInterface arguments"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input_filepath")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Path to dataset"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"label_map")," ",(0,i.kt)("em",{parentName:"li"},"dict")," - Map categorical values to numerical")),(0,i.kt)("h2",{id:"hfseqclassificationdatainterface-objects"},"HfSeqClassificationDataInterface Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class HfSeqClassificationDataInterface(data_interface.DataInterface)\n")),(0,i.kt)("p",null,"Retrieves train and val PyTorch Datasets."),(0,i.kt)("h4",{id:"__init__-1"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(args)\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"args")," ",(0,i.kt)("em",{parentName:"li"},"arguments.DataArguments")," - Dataclass")))}f.isMDXComponent=!0}}]);