# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- u/elr/documentation

pool:
  vmImage: 'ubuntu-latest'

name: deploy marlin documentation

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'prod'

  # Project root folder. Point to the root folder 
  projectRoot: $(System.DefaultWorkingDirectory)

  #ELR root folder
  elrRoot: $(projectRoot)/sources/dev/SubstrateInferences/Marlin
  
  python.version: '3.7'


steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    cd $(elrRoot)
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    cd docs/webapp
    pip install -r requirements.txt
  displayName: 'Build environment'

- script: |
    cd $(elrRoot)
    cd docs/webapp
    sphinx-apidoc -o source ../../marlin
    make html
  displayName: 'Generate docs'

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(elrRoot)/docs/webapp/_build/html'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true

- upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  displayName: 'Upload package'
  artifact: drop
