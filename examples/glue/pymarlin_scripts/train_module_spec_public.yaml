$schema: http://azureml/sdk-2-0/DistributedComponent.json
name: microsoft.substrate.horizontalsciences.pymarlin.glue
version: 0.0.1
is_deterministic: False
display_name: MarlinGLUE
type: DistributedComponent
description: Marlin GLUE
tags: {category: Marlin, contact: elrsubstrate@microsoft.com}

inputs:
  config_path:
    type: String
    description: required config for marlin job
    default: ./config.yaml

  model_model_name:
    type: String
    description: PLACEHOLDER
    default: bert
    optional: true

  model_encoder_key:
    type: String
    description: PLACEHOLDER
    default: bert
    optional: true

  model_hf_model:
    type: String
    description: PLACEHOLDER
    default: bert-base-uncased
    optional: true

  model_file:
    type: String
    description: PLACEHOLDER
    default: pytorch_model.bin
    optional: true

  model_wts_path:
    type: AnyDirectory
    description: PLACEHOLDER
    optional: false

  model_config_file:
    type: String
    description: PLACEHOLDER
    default: config.json
    optional: true

  model_config_path:
    type: AnyDirectory
    description: PLACEHOLDER
    optional: false

  model_get_latest_ckpt:
    type: String
    description: PLACEHOLDER
    default: True
    optional: true

  # Module interface arguments
  module_operation:
    type: String
    description: PLACEHOLDER
    default: train
    optional: true

  module_trainer_backend:
    type: String
    description: PLACEHOLDER
    default: DDPTrainerBackend
    optional: true

  module_fp16:
    type: String
    description: PLACEHOLDER
    default: False
    optional: true

  module_task:
    type: String
    description: PLACEHOLDER
    optional: false

  module_trainpath:
    type: AnyDirectory
    description: PLACEHOLDER
    optional: false

  module_valpath:
    type: AnyDirectory
    description: PLACEHOLDER
    optional: false

  module_max_lr:
    type: String
    description: PLACEHOLDER
    default: 0.00002
    optional: true

  module_warmup_prop:
    type: String
    description: PLACEHOLDER
    default: 0.1
    optional: true

  module_num_files:
    type: String
    description: PLACEHOLDER
    default: -1
    optional: true

  module_no_labels:
    type: String
    description: PLACEHOLDER
    default: False
    optional: true

  module_log_level:
    type: String
    description: PLACEHOLDER
    default: DEBUG
    optional: true

outputs:
  module_output_dir:
    type: AnyDirectory
    description: PLACEHOLDER
  ckpt_save_dir:
    type: AnyDirectory
    description: PLACEHOLDER


launcher:
  type: mpi
  additional_arguments: >-
    python train.py
      --config_path {inputs.config_path}

      [--model.model_name {inputs.model_model_name}]
      [--model.encoder_key {inputs.model_encoder_key}]
      [--model.hf_model {inputs.model_hf_model}]
      [--model.model_file {inputs.model_file}]
      --model.model_wts_path {inputs.model_wts_path}
      [--model.model_config_file {inputs.model_config_file}]
      --model.model_config_path {inputs.model_config_path}
      [--model.get_latest_ckpt {inputs.model_get_latest_ckpt}]

      [--module.operation {inputs.module_operation}]
      [--module.trainer_backend {inputs.module_trainer_backend}]
      [--module.fp16 {inputs.module_fp16}]
      --module.task {inputs.module_task}
      --module.trainpath {inputs.module_trainpath}
      --module.valpath {inputs.module_valpath}
      --module.output_dir {outputs.module_output_dir}
      [--module.max_lr {inputs.module_max_lr}]
      [--module.warmup_prop {inputs.module_warmup_prop}]
      [--module.num_files {inputs.module_num_files}]
      [--module.no_labels {inputs.module_no_labels}]
      [--module.log_level {inputs.module_log_level}]
      --ckpt.save_dir {outputs.ckpt_save_dir}

environment:
  docker:
    image: mcr.microsoft.com/azureml/openmpi3.1.2-cuda10.1-cudnn7-ubuntu18.04
  conda:
    conda_dependencies_file: conda_env.yaml
  os: Linux